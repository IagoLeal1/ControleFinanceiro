// src/styles/_animations.scss

// Define a animação de fade-in e slide-up para a seção de resumo mensal
@keyframes fadeInSlideUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Aplica a animação ao container dos cards mensais
.monthly-summary-animated {
  display: flex; /* Garante que os cards internos continuem em flexbox */
  flex-wrap: wrap; /* Permite quebrar linha */
  gap: 1.5rem; /* Espaçamento entre os cards */
  justify-content: space-around; /* Distribui os cards */
  width: 100%; /* Ocupa a largura total disponível */

  animation: fadeInSlideUp 0.6s ease-out forwards; /* Aplica a animação */

  // Ajustes responsivos para os cards dentro deste container
  .summary-card {
    flex: 1 1 calc(33% - 1rem); // 3 cards por linha no desktop
    min-width: 250px; // Largura mínima para mobile

    @media (max-width: $breakpoint-tablet) {
      flex: 1 1 calc(50% - 1rem); // 2 cards por linha em tablet
    }

    @media (max-width: $breakpoint-mobile) {
      flex: 1 1 100%; // 1 card por linha em mobile
    }
  }
}

// Define a animação para o dropdown (fade-in e slide-down)
@keyframes dropdownFadeInSlideDown {
  from {
    opacity: 0;
    transform: translateY(-10px); /* Começa um pouco acima da posição final */
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Classe para aplicar a animação aos conteúdos do dropdown
.dropdown-content-animated {
  animation: dropdownFadeInSlideDown 0.4s ease-out forwards; /* Aplica a animação */
  // O 'forwards' garante que o estado final da animação seja mantido
}

/* --- Novas Animações de Transição de Página --- */

// Animação para a entrada da página (fade-in e slide-up sutil)
@keyframes pageFadeIn {
    from {
        opacity: 0;
        transform: translateY(10px);
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

// Animação para a saída da página (fade-out e slide-down sutil)
@keyframes pageFadeOut {
    from {
        opacity: 1;
        transform: translateY(0);
    }
    to {
        opacity: 0;
        transform: translateY(10px);
    }
}

// Classe para o container da página que entra
.page-enter-active {
    animation: pageFadeIn 0.5s ease-out forwards;
}

// Classe para o container da página que sai (será controlada pelo React)
.page-exit-active {
    animation: pageFadeOut 0.5s ease-in forwards;
    position: absolute; /* Essencial para que a página saindo não afete o layout da que entra */
    width: 100%;
}

/* --- Animação para Títulos (ajustada para um fade-in e slide-up mais suave) --- */
@keyframes titleFadeInUp { /* Renomeada a keyframe */
    from {
        opacity: 0;
        transform: translateY(20px); /* Começa mais para baixo */
    }
    to {
        opacity: 1;
        transform: translateY(0);
    }
}

.animated-title {
    animation: titleFadeInUp 0.8s ease-out 0.1s forwards; /* Ajustei duração e atraso */
    opacity: 0; /* Começa invisível para que a animação funcione */
}
